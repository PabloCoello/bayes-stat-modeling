---
title: "Eight Schools analysis"
author: "Pablo Coello Pulido"
date: "07/12/2024"
format:
  html:
    toc: true
    toc-depth: 2
    code-fold: true
    number-sections: true
    theme:
      light: flatly
      dark: darkly
---

```{R}
library("rstan")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
```

## Context
The Scholastic Aptitude Test (SAT) measures the aptitude of high-schoolers in order to help colleges to make admissions decisions. It is divided into two parts, verbal (SAT-V) and mathematical (SAT-M). Our data comes from the SAT-V (Scholastic Aptitude Test-Verbal) on eight different high schools, from an experiment conducted in the late 1970s. SAT-V is a standard multiple choice test administered by the Educational Testing Service. This Service was interested in the effects of coaching programs for each of the selected schools.

## Goals
Summarize what you want to know and conclude from the data. It is a good idea to itemize and prioritize them.

# Data

The study included coached and uncoached pupils, about sixty in each of the eight different schools; see Rubin (1981). All of them had already taken the PSAT (Preliminary SAT) which results were used as covariates. For each school, the estimated treatment effect and the standard error of the effect estimate are given. These are calculated by an analysis of covariance adjustment appropriate for a completely randomized experiment (Rubin 1981). This example was analyzed using a hierarchical normal model in Rubin (1981) and Gelman, Carlin, Stern, and Rubin (2003, Section 5.5).

```{R}
schools_dat <- list(J = 8, 
                    y = c(28.39,  7.94, -2.75,  6.82, -0.64,  0.63, 18.01, 12.16),
                    sigma = c(14.9, 10.2, 16.3, 11.0,  9.4, 11.4, 10.4, 17.6))
```

## Data dictionary

```{r}
#| warning: false
df <- read.csv2("data-dictionary.csv")
kableExtra::kable(df)
```

# Model


## Model formula
For modeling these data, we use a hierarchical model as proposed by Gelman et al. (2003, Section 5.5). We assume a normal distribution for the observed estimate for each school with mean theta and inverse-variance tau.y. The inverse-variance is given as 1/sigma.y2 and its prior distribution is uniform on (0,1000). For the mean theta, we employ another normal distribution with mean mu.theta and inverse-variance tau.theta.

$$Y[n] \sim \mathcal{N}(\mu, 1)$$

## Implement model
Implement the model formula in a programming language for estimating the parameters with both simulated and real data.

If we are running a stan model we can import the stan code from the .stan file in the directory. If we are using other dependencies like PyMC, we must try to fit all the implementation in one single chunk of code.


```{R}
fit <- stan(file = 'model.stan', data = schools_dat)
d <- as.data.frame(fit)
```

## Check models
Check whether the true values are recovered from simulated data. This is called parameter recovery. If the true values cannot be recovered, fitting the model to real data will not provide useful information. Visualization is also very helpful to check the goodness of fit.

```{R}
print(fit)
```

```{R}
plot(fit)
```

```{R}
pairs(fit, pars = c("mu", "tau", "lp__"))
```

# Interpret results
Interpret and visualize the estimated results to solve the problem set in section 1.2. It is also recommended in this section to make an effort to present the results with storytelling that is understandable to the intended audience. These results can be accompanied by visualizations, but it is essential to ensure that they align with the storytelling and remain accessible.

# References
* Gelman, A., Carlin, J. B., Stern, H. S., and Rubin, D. B. (2003). Bayesian Data Analysis, CRC Press, London, 2nd Edition.
* Rubin DB (1981). “Estimation in Parallel Randomized Experiments.” Journal of Educational Statistics, 6, 377–400.
